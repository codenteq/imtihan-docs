(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{294:function(t,e,s){"use strict";s.r(e);var a=s(10),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"testing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#testing"}},[t._v("#")]),t._v(" Testing")]),t._v(" "),e("p",[t._v("The Imtihan was created with the tests in mind. A file is already installed for your "),e("code",[t._v("phpunit.xml")]),t._v(" application. The Imtihan comes with convenient helper methods that allow you to test it in a meaningful way.")]),t._v(" "),e("h2",{attrs:{id:"the-env-testing-environment-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-env-testing-environment-file"}},[t._v("#")]),t._v(" The "),e("code",[t._v(".env.testing")]),t._v(" Environment File")]),t._v(" "),e("p",[t._v("In addition, you may create a "),e("code",[t._v(".env.testing")]),t._v(" file in the root of your project. This file will be used instead of the "),e("code",[t._v(".env")]),t._v(" file when running PHPUnit tests or executing Artisan commands with the "),e("code",[t._v("--env=testing")]),t._v(" option.")]),t._v(" "),e("h2",{attrs:{id:"running-tests"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#running-tests"}},[t._v("#")]),t._v(" Running Tests")]),t._v(" "),e("p",[t._v("As mentioned previously, once you've written tests, you may run them using "),e("code",[t._v("phpunit")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("./vendor/bin/phpunit\n")])])]),e("p",[t._v("In addition to the "),e("code",[t._v("phpunit")]),t._v(" command, you may use the "),e("code",[t._v("test")]),t._v(" Artisan command to run your tests. The Artisan test runner provides verbose test reports in order to ease development and debugging:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("php artisan "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])])]),e("h3",{attrs:{id:"filter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[t._v("#")]),t._v(" Filter")]),t._v(" "),e("p",[t._v("It is possible to filter instead of running the tests from scratch every time, for this follow the "),e("code",[t._v("--filter")]),t._v(" command")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("php artisan "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--filter")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ExampleTestController\n")])])]),e("p",[t._v("It is possible to run a single function inside the filter")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("php artisan "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--filter")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ExampleTestController::function_name\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);